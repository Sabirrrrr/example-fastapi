"""fresh_start

Revision ID: 554e1f8eb6be
Revises: 697532b7d4d3
Create Date: 2025-03-11 05:15:02.911415

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '554e1f8eb6be'
down_revision: Union[str, None] = '697532b7d4d3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('food_category')
    op.drop_table('food_component')
    op.drop_table('food_attribute')
    op.drop_table('measure_unit')
    op.drop_table('food_calorie_conversion_factor')
    op.drop_table('lab_method_code')
    op.drop_table('input_food')
    op.drop_table('lab_method')
    op.drop_table('sample_food')
    op.drop_table('food_protein_conversion_factor')
    op.drop_table('foundation_food')
    op.drop_table('sub_sample_food')
    op.drop_table('agricultural_samples')
    op.drop_table('sub_sample_result')
    op.drop_table('food_nutrient_conversion_factor')
    op.drop_table('market_acquisition')
    op.drop_table('food_update_log_entry')
    op.drop_table('acquisition_samples')
    op.drop_table('food_portion')
    op.drop_table('food_attribute_type')
    op.drop_table('lab_method_nutrient')
    op.drop_table('nutrient_categorized')
    op.alter_column('food', 'fdc_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False,
               autoincrement=True)
    op.alter_column('food', 'data_type',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('food', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('food', 'food_category_id',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('food', 'publication_date',
               existing_type=sa.TEXT(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('food_nutrient', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False,
               autoincrement=True)
    op.alter_column('food_nutrient', 'fdc_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('food_nutrient', 'nutrient_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('food_nutrient', 'data_points',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('food_nutrient', 'derivation_id',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('food_nutrient', 'footnote',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('food_nutrient', 'min_year_acquired',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Integer(),
               existing_nullable=True)
    op.create_foreign_key(None, 'food_nutrient', 'food', ['fdc_id'], ['fdc_id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'food_nutrient', 'nutrient', ['nutrient_id'], ['id'], ondelete='CASCADE')
    op.alter_column('nutrient', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               nullable=False,
               autoincrement=True)
    op.alter_column('nutrient', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('nutrient', 'unit_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('nutrient', 'nutrient_nbr',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('nutrient', 'rank',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Integer(),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('nutrient', 'rank',
               existing_type=sa.Integer(),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
    op.alter_column('nutrient', 'nutrient_nbr',
               existing_type=sa.String(),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
    op.alter_column('nutrient', 'unit_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('nutrient', 'name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('nutrient', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True,
               autoincrement=True)
    op.drop_constraint(None, 'food_nutrient', type_='foreignkey')
    op.drop_constraint(None, 'food_nutrient', type_='foreignkey')
    op.alter_column('food_nutrient', 'min_year_acquired',
               existing_type=sa.Integer(),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
    op.alter_column('food_nutrient', 'footnote',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('food_nutrient', 'derivation_id',
               existing_type=sa.Integer(),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
    op.alter_column('food_nutrient', 'data_points',
               existing_type=sa.Integer(),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
    op.alter_column('food_nutrient', 'nutrient_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('food_nutrient', 'fdc_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True)
    op.alter_column('food_nutrient', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True,
               autoincrement=True)
    op.alter_column('food', 'publication_date',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('food', 'food_category_id',
               existing_type=sa.Integer(),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
    op.alter_column('food', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('food', 'data_type',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('food', 'fdc_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               nullable=True,
               autoincrement=True)
    op.create_table('nutrient_categorized',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('unit_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('nutrient_nbr', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('rank', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('category', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('lab_method_nutrient',
    sa.Column('lab_method_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('nutrient_id', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('food_attribute_type',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('food_portion',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('fdc_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('seq_num', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('measure_unit_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('portion_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('modifier', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gram_weight', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('data_points', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('footnote', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('min_year_acquired', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    op.create_table('acquisition_samples',
    sa.Column('fdc_id_of_sample_food', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('fdc_id_of_acquisition_food', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('food_update_log_entry',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('last_updated', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('market_acquisition',
    sa.Column('fdc_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('brand_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('expiration_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('label_weight', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('location', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('acquisition_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sales_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sample_lot_nbr', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sell_by_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('store_city', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('store_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('store_state', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('upc_code', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('food_nutrient_conversion_factor',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('fdc_id', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('sub_sample_result',
    sa.Column('food_nutrient_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('adjusted_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('lab_method_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('nutrient_name', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('agricultural_samples',
    sa.Column('fdc_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('acquisition_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('market_class', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('treatment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('state', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('sub_sample_food',
    sa.Column('fdc_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('fdc_id_of_sample_food', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('foundation_food',
    sa.Column('fdc_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('NDB_number', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('footnote', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('food_protein_conversion_factor',
    sa.Column('food_nutrient_conversion_factor_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    op.create_table('sample_food',
    sa.Column('fdc_id', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('lab_method',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('technique', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('input_food',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('fdc_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('fdc_of_input_food', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('seq_num', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ingredient_code', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ingredient_description', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('unit', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('portion_code', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('portion_description', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gram_weight', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('retention_code', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    op.create_table('lab_method_code',
    sa.Column('lab_method_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('code', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('food_calorie_conversion_factor',
    sa.Column('food_nutrient_conversion_factor_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('protein_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('fat_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('carbohydrate_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    op.create_table('measure_unit',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('food_attribute',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('fdc_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('seq_num', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('food_attribute_type_id', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('value', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('food_component',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('fdc_id', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pct_weight', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('is_refuse', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gram_weight', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('data_points', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('min_year_acqured', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    op.create_table('food_category',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('code', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True)
    )
    # ### end Alembic commands ###
